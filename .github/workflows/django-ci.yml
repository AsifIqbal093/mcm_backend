name: Django CI/CD

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASS }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --host=localhost --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v3

      - name: üîß Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: üóÑÔ∏è Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üì¶ Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install Pillow  # ‚úÖ Explicitly install Pillow

      - name: üîë Create .env file
        run: |
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DJANGO_SETTINGS_MODULE=mcm_backend.settings" >> .env

      - name: ‚è≥ Wait for MySQL to be ready
        run: |
          until mysql -h 127.0.0.1 -uroot -proot -e "SELECT 1"; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done

      - name: üé≠ Grant Database Permissions
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -uroot -proot -e "
            CREATE DATABASE IF NOT EXISTS test_${{ secrets.DB_NAME }};
            CREATE USER IF NOT EXISTS '${{ secrets.DB_USER }}'@'%' IDENTIFIED BY '${{ secrets.DB_PASS }}';
            GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.DB_USER }}'@'%';
            FLUSH PRIVILEGES;"

      - name: üß± Run Migrations
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)/mcm_backend
          python manage.py migrate

      - name: üß™ Run Tests
        run: |
          source venv/bin/activate
          export PYTHONPATH=$(pwd)/mcm_backend
          python manage.py test --keepdb

      - name: ‚úÖ Lint Code
        run: |
          source venv/bin/activate
          pip install flake8
          flake8 . --exit-zero

      - name: üöÄ Check PR Status
        if: github.event_name == 'pull_request'
        run: echo "PR is ready for review if all checks pass!"
